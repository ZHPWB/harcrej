openapi: 3.0.0
info:
  title: HARCREJ
  description: API for managing the Polish Scouts organization.
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url

paths:
  /api/v1/choragiew:
    post:
      tags:
        - choragiew
      summary: Create a new Chorągiew
      operationId: postChoragiew
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Choragiew'
      responses:
        '201':
          description: Chorągiew created successfully
    get:
      tags:
        - choragiew
      summary: Get a list of all Chorągwi
      operationId: getListOfChoragwi
      responses:
        '200':
          description: A list of Chorągwi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Choragiew'

  /api/v1/choragiew/{choragiewId}:
    get:
      tags:
        - choragiew
      summary: Get details of a specific Chorągiew
      operationId: getChoragiewById
      parameters:
        - in: path
          name: choragiewId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Chorągiew details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Choragiew'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - choragiew
      summary: Delete a specific Chorągiew
      operationId: deleteChoragiew
      parameters:
        - in: path
          name: choragiewId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Chorągiew deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update a Choragiew
      operationId: updateChoragiew
      tags:
        - choragiew
      parameters:
        - in: path
          name: choragiewId
          schema:
            type: integer
          required: true
      requestBody:
        description: Updated Choragiew
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Choragiew"
      responses:
        "200":
          description: Choragiew updated successfully
        "404":
          $ref: "#/components/responses/NotFound"

  /api/v1/choragiew/{choragiewId}/hufiec/{hufiecId}:
    post:
      tags:
        - Choragiew
      summary: Link a Hufiec to a Choragiew
      description: Associates a specific Hufiec with a Choragiew.
      operationId: linkHufiecToChoragiew
      parameters:
        - name: choragiewId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the Choragiew to which the Hufiec will be linked.
        - name: hufiecId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the Hufiec to be linked to the Choragiew.
      responses:
        '200':
          description: Hufiec successfully linked to Choragiew.
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /api/v1/hufiec:
    post:
      tags:
        - hufiec
      summary: Create a new Hufiec
      operationId: postHufiec
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hufiec'
      responses:
        '201':
          description: Hufiec created successfully
    get:
      tags:
        - hufiec
      summary: Get a list of all Hufce
      operationId: getListOfHufce
      responses:
        '200':
          description: A list of Hufce
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hufiec'

  /api/v1/hufiec/{hufiecId}:
    get:
      tags:
        - hufiec
      summary: Get details of a specific Hufiec
      operationId: getHufiecById
      parameters:
        - in: path
          name: hufiecId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Hufiec details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hufiec'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - hufiec
      summary: Delete a specific Hufiec
      operationId: deleteHufiec
      parameters:
        - in: path
          name: hufiecId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Hufiec deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update a Hufiec
      operationId: updateHufiec
      tags:
        - hufiec
      parameters:
        - in: path
          name: hufiecId
          schema:
            type: integer
          required: true
      requestBody:
        description: Updated Hufiec
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Hufiec"
      responses:
        "200":
          description: Hufiec updated successfully
        "404":
          $ref: "#/components/responses/NotFound"

  /api/v1/hufiec/{hufiecId}/szczep/{szczepId}:
    post:
      tags:
        - Hufiec
      summary: Link a Szczep to a Hufiec
      description: Associates a specific Szczep with a Hufiec.
      operationId: linkSzczepToHufiec
      parameters:
        - name: hufiecId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the Hufiec to which the Szczep will be linked.
        - name: szczepId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the Szczep to be linked to the Hufiec.
      responses:
        '200':
          description: Szczep successfully linked to Hufiec.

  /api/v1/szczep:
    post:
      tags:
        - szczep
      summary: Create a new Szczep
      operationId: postSzczep
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Szczep'
      responses:
        '201':
          description: Szczep created successfully
    get:
      tags:
        - szczep
      summary: Get a list of all Szczep
      operationId: getListOfSzczep
      responses:
        '200':
          description: A list of Szczep
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Szczep'

  /api/v1/szczep/{szczepId}:
    get:
      tags:
        - szczep
      summary: Get details of a specific Szczep
      operationId: getSzczepById
      parameters:
        - in: path
          name: szczepId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Szczep details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Szczep'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - szczep
      summary: Delete a specific Szczep
      operationId: deleteSzczep
      parameters:
        - in: path
          name: szczepId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Szczep deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update a Szczep
      operationId: updateSzczep
      tags:
        - szczep
      parameters:
        - in: path
          name: szczepId
          schema:
            type: integer
          required: true
      requestBody:
        description: Updated Szczep
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Szczep"
      responses:
        "200":
          description: Szczep updated successfully
        "404":
          $ref: "#/components/responses/NotFound"

  /api/v1/druzyna:
    post:
      tags:
        - druzyna
      summary: Create a new Druzyna
      operationId: postDruzyna
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Druzyna'
      responses:
        '201':
          description: Druzyna created successfully
    get:
      tags:
        - druzyna
      summary: Get a list of all Druzyna
      operationId: getListOfDruzyna
      responses:
        '200':
          description: A list of Druzyna
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Druzyna'

  /api/v1/druzyna/{druzynaId}:
    get:
      tags:
        - druzyna
      summary: Get details of a specific Druzyna
      operationId: getDruzynaById
      parameters:
        - in: path
          name: druzynaId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Druzyna details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Druzyna'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - druzyna
      summary: Delete a specific Druzyna
      operationId: deleteDruzyna
      parameters:
        - in: path
          name: druzynaId
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Druzyna deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      summary: Update a Druzyna
      operationId: updateDruzyna
      tags:
        - druzyna
      parameters:
        - in: path
          name: druzynaId
          schema:
            type: integer
          required: true
      requestBody:
        description: Updated Druzyna
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Druzyna"
      responses:
        "200":
          description: Druzyna updated successfully
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/szczep/{szczepId}/druzyna/{druzynaId}:
    post:
      tags:
        - Szczep
      summary: Link a Drużyna to a Szczep
      description: Associates a specific Drużyna with a Szczep.
      operationId: linkDruzynaToSzczep
      parameters:
        - name: szczepId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the Szczep to which the Drużyna will be linked.
        - name: druzynaId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the Drużyna to be linked to the Szczep.
      responses:
        '200':
          description: Drużyna successfully linked to Szczep.


  /api/v1/druzyna/rejestracje/{druzynaId}:
    post:
      operationId: postDruzynaRejestracje
      tags:
        - rejestracje
      summary: Register yearly details for a specific troop
      description: Allows a troop leader to register or update the annual details for their troop (Druzyna).
      parameters:
        - name: druzynaId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the troop (Druzyna)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rejestracje'
      responses:
        '201':
          description: Druzyna rejestracja created successfully
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      operationId: getDruzynaRejestracje
      tags:
        - rejestracje
      summary: Get Druzyna registration
      description: Allows a Druzynowy to view their registration
      parameters:
        - name: druzynaId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the Druzyna.
      responses:
        '200':
          description: Druzyna registration
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Rejestracje'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/szczep/rejestracje/{szczepId}:
    post:
      operationId: postSzczepRejestracje
      tags:
        - rejestracje
      summary: Register yearly details for a specific szczep
      description: Allows a szczepowy to register or update the annual details for their druzyny
      parameters:
        - name: szczepId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the szczep
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rejestracje'
      responses:
        '201':
          description: Szczep rejestracja created successfully
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      operationId: getSzczepRejestracje
      tags:
        - rejestracje
      summary: Get a list of all Druzyny registrations for a Szczep
      description: Allows a Szczepowy to view all the annual registration details for their Druzyny.
      parameters:
        - name: szczepId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the Szczep.
      responses:
        '200':
          description: A list of Druzyny registrations for the specified Szczep
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rejestracje'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/hufiec/rejestracje/{hufiecId}:
    post:
      operationId: postHufiecRejestracje
      tags:
        - rejestracje
      summary: Register yearly details for a specific hufiec
      description: Allows a Hufcowy to register or update the annual details for their szczepy
      parameters:
        - name: hufiecId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the hufiecId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rejestracje'
      responses:
        '201':
          description: Hufiec rejestracja created successfully
        '404':
          $ref: '#/components/responses/NotFound'
    get:
      operationId: getHufiecRejestracje
      tags:
        - rejestracje
      summary: Get a list of all Szczepy registrations for a Hufiec
      description: Allows a Hufcowy to view all the annual registration details for their Szczepy.
      parameters:
        - name: hufiecId
          in: path
          required: true
          schema:
            type: integer
          description: The unique ID of the Hufiec.
      responses:
        '200':
          description: A list of Szczepy registrations for the specified Hufiec
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rejestracje'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/v1/choragiew/rejestracje:
    get:
      operationId: getAllRejestracje
      tags:
        - rejestracje
      summary: Get all Registrations for all Druzyny
      description: Allows an admin to view all the registrations for all Druzyny across the system.
      responses:
        '200':
          description: A list of all Druzyny registrations across all Szczepy and Hufce
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rejestracje'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/person:
    post:
      tags:
        - person
      summary: Create a new Person
      operationId: postPerson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Person created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
    get:
      tags:
        - person
      summary: Get a list of all people
      operationId: getListOfPeople
      responses:
        '200':
          description: A list of people
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'

  /api/v1/role-assignment:
    post:
      summary: Assign a role to a person
      operationId: postRoleAssignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleAssignment'
      responses:
        '201':
          description: Role assigned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignment'


components:
  schemas:
    Rejestracje:
      type: object
      properties:
        registrationId:
          type: integer
          description: Unique identifier for the registration.
        druzynaId:
          type: integer
          description: ID of the associated Druzyna (troop), if applicable.
        szczepId:
          type: integer
          description: ID of the associated Szczep, if applicable.
        hufiecId:
          type: integer
          description: ID of the associated Hufiec, if applicable.
        year:
          type: integer
          description: The year for which the registration applies.
        submittedDate:
          type: string
          format: date
          description: Date when the registration was submitted.
        status:
          type: string
          enum: [PENDING, APPROVED, REJECTED]
          description: Current status of the registration.
        comments:
          type: string
          maxLength: 500
          description: Comments or notes about the registration.
        updatedBy:
          type: string
          description: User who last updated the registration.
        updatedAt:
          type: string
          format: date
          description: Date when the registration was last updated.
        totalParticipants:
          type: integer
          minimum: 0
          description: Total number of participants in the troop for the year.
        totalInstruktorzy:
          type: integer
          minimum: 0
          description: Total number of instructors in the troop for the year.
        totalZbiorki:
          type: integer
          minimum: 0
          description: Total number of troop meetings (zbiorki) during the year.
        totalWycieczki:
          type: integer
          minimum: 0
          description: Total number of troop trips (wycieczki) during the year.


    PersonalDetails:
      type: object
      properties:
        hufiec:
          type: string
          maxLength: 30
        stopien:
          type: string
          maxLength: 30
        imie:
          type: string
          maxLength: 30
        nazwisko:
          type: string
          maxLength: 30

    TroopInfo:
      type: object
      properties:
        nazwaDruzyny:
          type: string
          maxLength: 50
        patron:
          type: string
          maxLength: 30
        miastoDruzyny:
          type: string
          maxLength: 30
        miastoDruzynowego:
          type: string
          maxLength: 30
        iloscZastepow:
          type: integer
          format: int32
        czlonkowRady:
          type: integer
          format: int32

    Address:
      type: object
      properties:
        addressLine1:
          type: string
          maxLength: 30
        addressLine2:
          type: string
          maxLength: 30
        city:
          type: string
          maxLength: 30
        postcode:
          type: string
          maxLength: 10

    ContactInfo:
      type: object
      properties:
        telDom:
          type: string
          maxLength: 15
        telPraca:
          type: string
          maxLength: 15
        komurka:
          type: string
          maxLength: 15

    Stats:
      type: object
      properties:
        totalParticipants:
          type: integer
        totalInstruktorzy:
          type: integer
        totalZbiorki:
          type: integer
        totalWycieczki:
          type: integer

    CourseInfo:
      type: object
      properties:
        iloscKursow:
          type: integer
          format: int32
        iloscNaKursow:
          type: integer
          format: int32
        iloscBiwak:
          type: integer
          format: int32
        iloscNaBiwak:
          type: integer
          format: int32
        iloscZlaz:
          type: integer
          format: int32
        iloscNaZlaz:
          type: integer
          format: int32
        # Add additional fields here as needed...

    Assessment:
      type: object
      properties:
        ocenaProgramu:
          type: integer
          format: int32
        ocenaAdmin:
          type: integer
          format: int32
        ocenaSysZas:
          type: integer
          format: int32
        ocenaKsiegi:
          type: integer
          format: int32
        ocenaSpraw:
          type: integer
          format: int32
        ocenaZbiorki:
          type: integer
          format: int32
        ocenaHarce:
          type: integer
          format: int32
        ocenaOboz:
          type: integer
          format: int32
        ocenaWspol:
          type: integer
          format: int32
        ocenaWykonane:
          type: integer
          format: int32

    Activity:
      type: object
      properties:
        type:
          type: string
        count:
          type: integer
          format: int32


    Choragiew:
      type: object
      properties:
        country:
            type: string
            enum: [ UK, Kanada, USA ]
        komendantChoragwi:
          type: object
          $ref: '#/components/schemas/Person'
        hufce:
          type: array
          items:
            $ref: '#/components/schemas/Hufiec'

    Hufiec:
      type: object
      properties:
        name:
          type: string
        areaOfOperation:
          type: string
        hufcowy:
          type: object
          $ref: '#/components/schemas/Person'
        szczepy:
          type: array
          items:
            $ref: '#/components/schemas/Szczep'

    Szczep:
      type: object
      properties:
        name:
          type: string
        areaOfOperation:
          type: string
        szczepowy:
          type: object
          $ref: '#/components/schemas/Person'
        druzyny:
          type: array
          items:
            $ref: '#/components/schemas/Druzyna'

    Druzyna:
      type: object
      properties:
        name:
          type: string
        addressOfOperation:
          type: object
          $ref: '#/components/schemas/Address'
        druzynowy:
          type: object
          $ref: '#/components/schemas/Person'
        type:
          type: string
          enum: [ harcerze, wedrownicy, zuchy ]
        komenda:
          type: array
          items:
            $ref: '#/components/schemas/Person'
        currentStats:
          type: object
          $ref: '#/components/schemas/Stats'
        yearEstablished:
          type: string

    Person:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        mobile:
          type: string
        dateOfBirth:
          type: string
          format: date
        address:
          type: object
          $ref: '#/components/schemas/Address'
        stopien:
          type: string

    RoleAssignment:
      type: object
      properties:
        role_assignmentId:
          type: integer
        personId:
          type: integer
        unitId:
          type: integer
        unit_type:
          type: string
          enum: [ choragiew, hufiec, szczep, druzyna ]
        funkcja:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date

    ErrorResponse:
      required:
        - message
        - errors
      type: object
      properties:
        message:
          type: string
          example: Bad request
        errors:
          type: array
          description: Validation/ error messages
          items:
            type: string
            example: Szczep id not found
  responses:
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
